android {

    defaultConfig {
        // 风味维度，是需要结合 “产品风味（即productFlavors）” 来一起使用的。
        flavorDimensions('product')
    }

    // 注意，outputFileName要么区分abi，要么不自定义使用系统默认，否则会因为命名相同而打包失败
    splits {
        abi {
            // 是否开启 abi 分包，默认不开启
            enable true
            // 清除默认架构列表，当我们开启abi 分包时，gradle会帮我们初始化一个架构列表
            reset()
            // 指定需要的架构
            include 'armeabi-v7a', 'arm64-v8a', 'x86', "x86_64"
        }
    }

    productFlavors {

        productBreath {
            dimension 'product'

            versionCode 1
            versionName "1.0.0"

            // java代码中可用于区分风味包的自定义字段
            buildConfigField "String", "FLAVORS_TYPE", "\"1\""
            buildConfigField "String", "BUGLY_APP_KEY", isReleaseBuildType() ? "\"xxxxx\"" : "\"yyyyy\""
        }

        productA {
            dimension 'product'

            versionCode 2
            versionName "1.0.1"

            // java代码中可用于区分风味包的自定义字段
            buildConfigField "String", "FLAVORS_TYPE", "\"2\""
            buildConfigField "String", "BUGLY_APP_KEY", isReleaseBuildType() ? "\"zzzzzz\"" : "\"nnnnnnn\""
        }

    }

}

boolean isReleaseBuildType() {
    for (String s : gradle.startParameter.taskNames) {
        if (s.contains("Release") | s.contains("release")) {
            println("正式环境release")
            return true
        }
    }
    println("测试环境debug")
    return false
}

